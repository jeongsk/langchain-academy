/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var S=Object.create;var f=Object.defineProperty;var P=Object.getOwnPropertyDescriptor;var A=Object.getOwnPropertyNames;var T=Object.getPrototypeOf,V=Object.prototype.hasOwnProperty;var b=(s,i)=>{for(var t in i)f(s,t,{get:i[t],enumerable:!0})},y=(s,i,t,o)=>{if(i&&typeof i=="object"||typeof i=="function")for(let a of A(i))!V.call(s,a)&&a!==t&&f(s,a,{get:()=>i[a],enumerable:!(o=P(i,a))||o.enumerable});return s};var D=(s,i,t)=>(t=s!=null?S(T(s)):{},y(i||!s||!s.__esModule?f(t,"default",{value:s,enumerable:!0}):t,s)),F=s=>y(f({},"__esModule",{value:!0}),s);var M={};b(M,{default:()=>w});module.exports=F(M);var n=require("obsidian"),E=require("child_process"),x=D(require("path")),L={appMap:{},defaultApp:"",ignoredExtensions:["md","canvas","pdf","png","jpg","jpeg","gif","bmp","svg","webp","mp4","mov","avi","mkv","webm"]},w=class extends n.Plugin{async onload(){await this.loadSettings(),this.addSettingTab(new v(this.app,this)),this.registerDomEvent(document,"click",async t=>{var l,d,g,r;let a=t.target.closest(".nav-file"),e=(l=a==null?void 0:a.querySelector(".nav-file-title"))==null?void 0:l.getAttr("data-path"),p=e?(d=x.extname(e))==null?void 0:d.substring(1):null;if(p&&!this.settings.ignoredExtensions.includes(p)){let c=this.settings.appMap[p]||this.settings.defaultApp;if(!c)return;t.preventDefault(),t.stopImmediatePropagation();let m=((r=(g=this.app.vault.adapter).getBasePath)==null?void 0:r.call(g))||this.app.vault.adapter.basePath,h=x.join(m,e);(0,E.execFile)(c,[h],u=>{u&&new n.Notice(`Failed to open ${e}: ${u.message}`)})}},!0)}onunload(){}async loadSettings(){this.settings=Object.assign({},L,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}},v=class extends n.PluginSettingTab{constructor(t,o){super(t,o);this.plugin=o}display(){let{containerEl:t}=this;t.empty(),t.createEl("h2",{text:"Custom File Viewer Settings"}),new n.Setting(t).setName("Default Application Path").setDesc("Path to the default app for opening files (used if no mapping found).").addText(e=>e.setPlaceholder("C:\\Program Files\\...\\App.exe").setValue(this.plugin.settings.defaultApp).onChange(async p=>{this.plugin.settings.defaultApp=p,await this.plugin.saveSettings()})),t.createEl("h3",{text:"Extension to Application Mapping"});let o=t.createDiv(),a=()=>{o.empty();let e=this.plugin.settings.appMap;Object.entries(e).forEach(([l,d])=>{let g=o.createDiv({cls:"setting-item"});g.style.display="flex",g.style.gap="10px",g.style.alignItems="center";let r=new n.TextComponent(g);r.setPlaceholder("Extension (e.g. py)"),r.setValue(l),r.inputEl.style.width="80px";let c=new n.TextComponent(g);c.setPlaceholder("Path to app"),c.setValue(d),c.inputEl.style.flexGrow="1";let m=new n.ButtonComponent(g);m.setButtonText("Remove"),m.onClick(async()=>{delete e[r.getValue().toLowerCase()],await this.plugin.saveSettings(),a()}),r.onChange(async h=>{let u=l,C=c.getValue();u!==h.toLowerCase()&&delete e[u],h&&(e[h.toLowerCase()]=C,await this.plugin.saveSettings())}),c.onChange(async h=>{let u=r.getValue().toLowerCase();u&&(e[u]=h,await this.plugin.saveSettings())})});let p=o.createEl("button",{text:"Add Mapping"});p.style.marginTop="10px",p.onclick=()=>{e[""]="",this.plugin.saveSettings().then(()=>a())}};a(),t.createEl("h3",{text:"Ignored Extensions"}),new n.Setting(t).setDesc("Comma-separated list of extensions that Obsidian will handle itself.").addTextArea(e=>{e.setValue(this.plugin.settings.ignoredExtensions.join(", ")),e.inputEl.style.width="100%",e.inputEl.rows=3,e.onChange(async p=>{this.plugin.settings.ignoredExtensions=p.split(",").map(l=>l.trim().toLowerCase()).filter(l=>l.length>0),await this.plugin.saveSettings()})})}};

/* nosourcemap */